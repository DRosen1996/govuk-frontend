description: |
  A button is an element that allows users to carry out an action on a GOV.UK page. Common use cases include allowing a user to <b>Start</b> an application or <b>Save and continue</b> their progress.

  A button should have a short text snippet that describes what it will do.
expectedParams:
  element:
    type: string
    require: true
    description: Whether to use an `input`, `button` or `a` element to create the button.
      In most cases you will not need to set this as it will be configured automatically
      if you use `href` or `html`.
  text:
    type: string
    require: true
    description: Text for the button
  html:
    type: string
    require: true
    description: HTML for the button or link. If this is provided, the `text` argument
      will be ignored and `element` will be automatically set to `button` unless `href`
      is also set, or it has already been defined. This argument has no effect if `element`
      is set to `input`.
  name:
    type: string
    require: true
    description: Name for the `input` or `button`. This has no effect on `a` elements.
  type:
    type: string
    require: true
    description: Type of `input` or `button` â€“ `button`, `submit` or `reset`. Defaults
      to `submit`. This has no effect on `a` elements.
  value:
    type: string
    require: true
    description: Value for the `button` tag. This has no effect on `a` or `input` elements.
  disabled:
    type: boolean
    require: false
    description: Whether the button should be disabled. For button and input elements,
      `disabled` and `aria-disabled` attributes will be set automatically.
  href:
    type: string
    require: false
    description: The URL that the button should link to. If this is set, `element` will
      be automatically set to `a` if it has not already been defined.
  classes:
    type: string
    require: false
    description: Optional additional classes
  attributes:
    type: object
    require: false
    description: Any extra HTML attributes (for example data attributes) to add to the
      error message span tag
examples:
- name: default
  data:
    text: Save and continue
- name: disabled
  data:
    text: Disabled button
    disabled: true
- name: link
  data:
    text: Link button
    href: '/'
- name: disabled-link
  data:
    text: Disabled link button
    href: '/'
    disabled: true
- name: start-link
  data:
    text: Start now link button
    href: /
    classes: 'govuk-c-button--start'
- name: explicit-button
  data:
    element: button
    name: start-now
    text: Start now
- name: explicit-button-disabled
  data:
    element: button
    text: Explicit button disabled
    disabled: true
- name: button-active-state
  description: Simulate triggering the :active CSS pseudo-class, not available in the production build.
  readme: false
  data:
    name: active
    text: Active
    classes: :active
- name: button-hover-state
  description: Simulate triggering the :hover CSS pseudo-class, not available in the production build.
  readme: false
  data:
    name: hover
    text: Hovered
    classes: :hover
- name: button-focus-state
  description: Simulate triggering the :focus CSS pseudo-class, not available in the production build.
  readme: false
  data:
    name: focus
    text: Focussed
    classes: :focus
